name: Release / Tag
description: Creates and pushes a Git tag from the commit that triggered the workflow.
author: Steffen Diswal

inputs:
  version:
    description: A string that contains a semantic version number on the form `<major>.<minor>.<patch>[-prerelease][+buildinfo]`.
    required: true

runs:
  using: composite
  steps:
    - name: Process input parameters
      id: parameters
      run: |
        EXTRACTED_VERSION=$(echo "$VERSION" | grep --only-matching --extended-regexp '[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?')
        if [[ -z "$EXTRACTED_VERSION" ]]; then
          echo 'Input parameter `version` must contain a semantic version number on the form `<major>.<minor>.<patch>[-prerelease][+buildinfo]`.'
          exit 2
        fi
        echo "remote=$(git remote | head -n 1)" >> "$GITHUB_OUTPUT"
        echo "version=$EXTRACTED_VERSION" >> "$GITHUB_OUTPUT"
      env:
        VERSION: ${{ inputs.version }}
      shell: bash
      #
    - name: Create a release tag
      run: |
        git tag --annotate --message "Release $VERSION" "v$VERSION"
        git push "$REMOTE" "v$VERSION"
      env:
        REMOTE: ${{ steps.parameters.outputs.remote }}
        VERSION: ${{ steps.parameters.outputs.version }}
      shell: bash
