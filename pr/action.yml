name: Release / Pull request
description: Commits all modified files to a new release branch and creates a pull request towards the default branch (e.g. `main`).
author: Steffen Diswal

inputs:
  gh-auth-token:
    description: An authentication token for the GitHub CLI with scopes for `repo` and `read:org` in order to create a pull request.
    required: true
  #
  version:
    description: The semantic version number of the new release on the form <major.minor.patch[-prerelease][+buildinfo]> without any `v` prefix.
    required: true

runs:
  using: composite
  steps:
    - name: Process input parameters # https://github.com/actions/runner/issues/1070
      run: |
        if [[ -z "$GH_AUTH_TOKEN" ]]; then
          echo "Input parameter 'gh-auth-token' must be non-empty."
          exit 2
        fi
        if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z-\.]+)?(\+[0-9A-Za-z-\.]+)?$ ]]; then
          echo "Input parameter 'version' must be a semantic version number on the form <major.minor.patch[-prerelease][+buildinfo]>."
          exit 2
        fi
      env:
        GH_AUTH_TOKEN: ${{ inputs.gh-auth-token }}
        VERSION: ${{ inputs.version }}
      shell: bash
      #
    - name: Create a release branch
      run: git checkout -b "release/$VERSION"
      env:
        VERSION: ${{ inputs.version }}
      shell: bash
      #
    - name: Commit modified files
      run: |
        REMOTE=$(git remote | head -n 1)
        git add .
        git commit --message "Prepare the release of $VERSION"
        git push --set-upstream $REMOTE "release/$VERSION"
      env:
        VERSION: ${{ inputs.version }}
      shell: bash
      #
    - name: Fetch the default branch # https://github.com/cli/cli/issues/5896
      run: |
        REMOTE=$(git remote | head -n 1)
        DEFAULT_BRANCH=$(git remote show $REMOTE | grep "HEAD branch" | cut -d" " -f5)
        git fetch $REMOTE $DEFAULT_BRANCH
      shell: bash
      #
    - name: Create a pull request from the release branch
      run: |
        gh auth login --with-token <<< "$GH_AUTH_TOKEN"
        gh pr create --title "Release $VERSION" --body "This pull request was created automatically by GitHub Actions."
      env:
        GH_AUTH_TOKEN: ${{ inputs.gh-auth-token }}
        VERSION: ${{ inputs.version }}
      shell: bash
